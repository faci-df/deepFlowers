## 1. 개요	Test How2
 
 
 
 
 
 
 
 
1.1.목표

<누가 이 문서를 읽을 것인가? 프로젝트의 목표를 적을 필요는 없다.> 

이 문서는 프로젝트 관리자, 개발자, 설계자, 사용자 모두가 읽어야 함.

1.2.문서 규칙

<문서 읽는 방법. 우선순위? 읽는데 필요한 기본규칙.>

테스트 시나리오 작성자, 사용자 설명서 작성자는 기능요구사항을 읽어야 함.

1.3. 대상 독자 및 읽는 방법

<읽는 방법에 관한 가이드. 문서를 읽는 수준에 대해 알려줌. 예를 들어 영업담당자는 1,2장만 대충보세요… 본 문서를 리뷰할 대상(관련 부서/팀 포함)을 명시한다.> ...

1.4. 프로젝트의 목표

<프로젝트의 목표. 비즈니스 전략/경영자 수준의 요약. 30초 엘리베이터 스피치 For CEO 수준. 일반 경영자가 이해할 수 있도록 CEO에게 보고하는 느낌. 미사여구를 잘 붙여야 함. 혹하게끔. 따라서 비즈니스 하는 사람(영업, 마케팅)이 적는게 좋다. 하는 것과 안하는 것을 잘 적는다. 보통 한 페이지 정도>  
관련문서
<문서와 링크까지 적어주어야 함. 한번 들어간 문서는 절대 파일 이름을 바꾸어서는 안된다.>

1.5. 정의 및 약어

<본 문서에서 자주 사용되는 용어에 대해 기본 정의 및 약어를 정리한다.>

•	텐서플로우(TensorFlow) : 기계 학습(Machine learning)과 딥러닝(Deep learning)을 위해 구글에서 만든 오픈소스 라이브러리.
•	기트허브 (GitHub) : 팀 프로젝트 소스 관리 시스템
•	슬랙 (Slack) : 이슈관리 시스템

1.6. 프로젝트 산출물

<프로젝트의 결과물 형태 및 버전등에 대해 기술한다. 산출물의 형태가 제품인지 라이브러리인지 툴인지를 구분하여 기술하며 산출물명(가칭) 및 그 대표 버전을 기술한다.>

1.7. 산출물 형태

1.8. 산출물 명(가칭) 및 버전

1.8.1.	AI 개발 프로세스 확립
1.8.2.	이슈트래커(Issue Tracker) 산출물
1.8.3.	앱(플레이스토어, 앱스토어 런칭)
1.8.4.	스펙 문서
1.8.5.	소스 코드


1.9. Scope
본 소프트웨어 요구사항 명세서는 꽃 이미지 찾기 소프트웨어의 기술 개발의 1차 년도에 필요한 사용자 요구사항을 도출하고 이에 따른 시스템 요구사항을 기술한 문서이다.

•	본 연구과제의 결과물을 활용하는 사용자 측면에서의 요구사항 및 기술의 발전 방향, 현 기술상태, 환경의 분석을 통해 도출된 것이다.
•	요구사항 정의사는 설계 구현 시험의 개발 과정에서 주요한 판단의 기준이 되는 문서로 활용하고자 한다.

•	주 기술 “텐서플로우”를 이용한 기계학습의 환경 및 기술을 상세화 한다.
•	2017년 연구회원이 개발하기 위한 Deep Flowers의 요구사항을 상세화하여 시스템을 개발한다.
•	본 소프트웨어는 모바일 용 어플리케이션이나, IOS는 지원하지 않는다.
( 2018년 연구 예정 )

본 문서는 모바일 폰의 카메라를 사용하여 인식한 꽃의 종류와 매칭 확률을 사용자에게 전달해주는 어플리케이션 개발에 필요한 요구사항을 정리하였다. 본 명세서의 목적은 정의된 요구사항들을 반영하여 개발자들이 소프트웨어의 설계에 반영하기 위함이다.

•	꽃 이미지 찾기 어플리케이션의 환경설정 및 설계를 위한 명세를 제공한다.
•	지정된 테스터의 테스트를 위한 정보를 제공한다.
•	사용자가 자신이 요청한 요구사항의 반영 여부와 적용되는 기술내용을 개괄적으로 파악하도록 한다.
•	사용자 요구사항과 환경이 변경됨에 따라 시스템 요구사항과 설계서, 시험계획서, 결과서도 이를 반영한다.
•	본 문서는 1차 년도의 요구사항만을 정의한다.

## 2.전체 설명

<모두가 보는 페이지 입니다, 경영자 포함. 마케팅도… 프로젝트 산출물의 To-Be 모습에 대해 전체적인 구성 및 동작, 기능 등에 대해 간략하게 기술한다. 상세한 기능 스펙은 7장에서 기술한다. >  

2.1.제품 조망

<바깥에서 바라보았을 때의 모습을 다이어그램으로 표현. 알아서 편하게 Arrow, Circle etc, Interface가 하나라도 있으면 누락없이 모두 찾아내서 표시한다. 모든 관련자가 리뷰해서 찾아내야 한다. 인터페이스 방향을 단방향/양방향으로 표시하고 적는다. 낱낱이 찾아내서 소개. 보통 한 페이지 정도. >

2.2.전체 시스템

<내부 컴포넌트 표시, 레이어 표시. 바깥의 어떤 것과 내부가 표시되는지? 외부 인터페이스와 연결관계. 프로젝트 산출물의 전체 시스템 구성도>

2.3. 동작방식
<2.2에서 나열한 내부 컴포넌트 동작방법 설명. 예를 들어 특정 시나리오를 놓고 순서대로 글쓰거나 다이어그램. 글로 쓰는 것을 권장함.>

2.4. 주요 기능
<간략하게 주요 기능을 고객의 언어로 기술. 주요한 기능 10개 ~ 20개. 매력적으로 고객이 이해할 수 있게 브로셔에 들어갈 수준으로 적어야 한다. 상세한 기능은 7장에서 참조한다. 7장의 주요 제목과 일치해야 한다. >

2.5.사용자 계층과 특징

<프로젝트 산출물 사용자 계층과 각각의 특징에 대해 기술>

2.6. 가정과 종속관계

<중요. 툴과 라이브러리 쓰는 수준등. 정식버전은 언제 나오는지? 협력패키지 종속성. 프로젝트 지연요소, 계획, 해결방법… 프로젝트 수행을 위해 반드시 수행 또는 결정되어야 하는 전제조건 또는 선행되어야 할 프로젝트에 대해 기술한다. 그 결과에 따라 본 프로젝트의 어떤 부분에 영향을 미칠지를 기술한다. 또한 통제 불가능한 외부요소에 의해 영향을 받을 수 있는 경우 그 요소에 대해 기술한다.>

2.7. 단계별 요구사항
<미래 버전 나열?

2.8.하위 호환성

<기존 버전이 존재한다면… 기존 시스템과의 통신, 파일확장자 종속성… 모두 뒤져서 찾아내야 한다. 관련자들의 합의를 받은 후 가능한지 여부를 정리한다. 타협이 필요하기도 하다. 신규개발이 아닌 경우 기존 산출물과의 호환성을 보장하기 위한 방법 및 Migration 방법을 기술한다. >

## 3.Environment(환경)

<기계적으로 작성 가능>

3.1.운영 환경

<프로젝트 산출물을 설치하고 운영하기 위한 하드웨어 환경정보와 소프트웨어 환경정보(OS 및 사전에 설치되어야 할 소프트웨어>

3.1.1하드웨어 환경
Desktop PC
Mobile Phone(Android 5.0)


3.1.2소프트웨어 환경
Mobile : Android 5.0 

3.1.2.1운영체제 환경
3.1.2.2운영체제외 소프트웨어 환경

<MS Internet Explorer 필수지원 …>

3.2.제품 설치 및 설정

<본 프로젝트 산출물 설치과정에서의 요구사항을 기술. 제품을 실행하는데 필요한 기본 설정 요소 및 방법에 대한 요구사항을 기술. DB 설치방법 포함, 관련 Tool 설치방법. 나중에 매뉴얼 설치 가이드에 사용.>

안드로이드 5.0이상 모바일에서만 운용가능하다.

3.3.배포환경

3.3.1.마스터 구성

<프로젝트 산출물 마스터를 어떤 형태로 구성할 것인지를 기술. 외적인 구성형태 및 마스터 내부 구성 형태를 미리 고려. 예를 들어 CD로 구성할지 여부… 파일명까지 일일이 정의)

APK파일 : DeepFlowers.apk

3.3.2.배포방법

<CD로 전달할지, 웹에서 다운로드 할지…>

3.3.2.1.	Android Play Store 로 배포
3.3.2.2.	DeepFlowers.apk 파일 직접 설치


3.3.3.패치와 업데이트 방법

<배포 이후 업데이트 방법, 자동패치? 수동패치?>

3.3.3.1.	Android Play Store 로 자동 설치 배포
3.3.3.2.	DeepFlowers.apk 파일 직접 설치



3.4.개발 환경

<프로젝트 산출물을 개발하기 위한 하드웨어 환경정보와 소프트웨어 환경정보를 기술. >

3.4.1.하드웨어 환경

3.4.1.1.	Desktop PC 
3.4.1.2.	Ubuntu 16.04 64bit Desktop
3.4.1.3.	GPU 없음( 필요로 할 수 도 있음)
3.4.1.4.	Android 5.0(API 21) 이상



3.4.2.소프트웨어 환경

OS : Linux(Ubuntu)

- TensorFlow
OS : Ubuntu
Builder : Bazel
Python
Tensor Flow
CUDA
CUDNN

- Android
Android Studio
Android SDK / NDK


3.5.테스트 환경

3.5.1.하드웨어 환경

3.5.2.소프트웨어 환경

3.6.형상관리

< 디렉토리 구조, 공통모듈위치, 소스코드 관리계획, 소프트웨어 개발계획서>

3.6.1.산출물 위치

<형상관리 서버상에 본 프로젝트 소스 위치 및 문서위치를 명시>

Git
Git Hub


3.6.1.1.소스코드 위치

3.6.1.2.문서 위치

3.6.2.빌드 환경

빌드 머신 등의 빌드환경을 어떻게 구축/운영할지 Build/Release 팀과 협의하여 기술. 빌드 기계, 디렉터리, 특수하게 요구되는 빌드방법등을 기술.

텐서플로우 안드로이드를 개발하기 위해선 구글에서 개발한 바젤(Bazel)을 사용한다.

1.	바젤 (https://bazel.build/)
2.	Android Studio
3.	Oracle JDK
4.	TensorFlow


3.7.버그 트래킹

<버그트래킹 시스템에 사용될 제품이름을 명시>

3.8.기타 환경


## 4.외부 인터페이스 요구사항

<창의적인 부분. 정답이 없다. 컴포넌트간 인터페이스. 쪼개고 깊이 들어갈 수 있다. 효율적인 컴포넌트 쪼개기(피드백, 수차례 반복후 최적화), Function call etc.>

4.1.시스템 인터페이스

<Depth가 내려갈수록 몇백페이지가 나올 수도 있다. 문서가 크니 별도 문서로 뺄 수도 있다.>

4.2.사용자 인터페이스

<스토리 보드 등 기존방법. 빠짐없이 모든 화면 기술. 별도 문서로 만들어 링크한다(문서가 클수록). Why를 적기 위해 이야기한다. 타협과정을 가감없이 서술해도 된다.(모호한 경우). 핵심적인 내용만 잡아서 적는다.>

4.3.하드웨어 인터페이스
<>

4.4.소프트웨어 인터페이스
<>

4.5.통신 인터페이스
<>

4.6.기타 인터페이스
<>

## 5.성능 요구사항

<성능목표를 가능한 수치화하여 도출한다. 이슈가 될만한 핵심적인 기능의 성능 속성을 설명한다. >

<스마트폰 기본사항>

삼성 갤럭시 S6 엣지(Samsung Galaxy S6 Edge 이상 버전
운영체제/소프트웨어 : 안드로이드 6.0.1 마시멜로 이상 버전
모델명 : SM-G925S (Korea SKT) 이후 버전
AP(Application Processor : 중앙처리장치) : 삼성전자 엑시노트 7 옥타
CPU(Central Processing Unit) :
ARM 홀딩스 코텍스-A57 2.1 GHz 쿼드 코어
ARM 홀딩스 코텍스-A53 아키텍처 1.5 GHz 쿼드 코어
(big.LITTLE HMP)
GPU(Graphics Processing Unit) :
ARM 홀딩스 말리 T760 MP8 700 MHz
RAM(Random Access Memory) : 3GB
저장용량 : 64GB (UFS : Unix File System)

5.1.작업처리량

<일정 시간내 수행한 작업량>

5.1.1	Deep Flowers 어플리케이션은 스마트폰에서 단독 실행을 했을 경우, 꽃검색 요청에 대한 처리를 3초 이내에 해야 한다.
5.1.2	Deep Flowers 어플리케이션은 스마트폰에서 3개이상의 어플리케이션이 실행되고 있는 경우에도 꽃검색 요청에 대한 처리를 3초 이내에 해야한다.

5.2.동시 세션

<동시 처리수>

5.3.대응시간

<처리시간 >

5.4.성능 종속 관계

<하나 이상의 성능이 서로 종속적일 경우 연관관계를 기술한다.>

5.5.기타 성능 요구사항

<메모리, 디스크공간 요구사항, DB 최대 rows와 같은 기타 성능 관련 요구사항을 기술한다. >

< 메모리, 디스크공간 요구사항>
5.5.1	Deep Flowers 어플리케이션의 사용 시 필요한 메모리는 300MB 필요하다.
5.5.2	Deep Flowers 어플리케이션의 사용 디스크 공간은 300MB 정도로 예상하며, 스마트폰의 디스크 공간은 스마트폰기종의 기본사양만 충족하면 된다.

<자원 사용률>
5.5.3	스마트폰 메모리(전체 3GB 중 예비공간 392MB포함)를 300MB 이상 사용되지 않아야 한다.
5.5.4	Deep Flowers 어플리케이션을 실행만 해 놓은 경우, CPU 사용량은 0MB, RAM 은 200MB 이하로 사용되어야 한다.(권장사용량 : 160MB)
5.5.5	Deep Flowers 어플리케이션을 실행하고, 절전모드를 실행하면 RAM은 100MB 미만으로 사용되어야한다. (권장 사용량 : 11MB~90MB)


## 6.기능 이외 요구사항

<예측해서 안전한 선을 이야기한다. 검증이 불가능한 부분>

6.1.안전성 요구사항

<말도 안되는 장애상황에 대한 안정성, 갑자기 전원코드를 뽀을 경우 etc>

6.2.보안 요구사항

<데이터 암호화, 사용자 인증, 권한정책, 암호화 방식…>

6.3.소프트웨어 시스템 특성

6.3.1.가용성

6.3.2.유지보수성

6.3.3.이식성(Portablity)

6.3.4.신뢰성

<Banking, 항공우주분야, 신뢰성 이슈가 큰 경우>

6.3.5.나머지 특성(Remaining Attributes)

* Correctness
* Efficiency
* Flexibility
* Interoperatability
* Reusability
* Testability
* Usability

6.4.데이터베이스 요구사항

<RDB가 아니라 데이터 포맷등 데이터에 대한 정의, 파일DB, 중요파일 리스트 etc>

* Types of Information used by various functions
* Frequency of use
* Acessing capabilities
* Data entities and their relationships
* Integrity constraints
* Data retention requirements

6.5.비즈니스 규칙

6.6.설계와 구현 제한사항

6.6.1.표준준수

6.6.2.기타제한사항

6.7.메모리 제한사항

<Firmware, 어플리케이션 크기>

6.8.운영 요구사항

<Daily Reboot여부, 백업필요여부, 중간에 사람이 개입해야 하는지 여부>

6.9.사이트 적용 요구사항

6.10다국어 지원 요구사항

<Locale은 메시지만 지원하는지? 그나라의 통화단위도 지원하는지? 문화/법규도 지원하는지?>

6.11.유니코드 지원

6.12.64비트 지원

6.13.제품 인증

<외부인증을 받아야 하는지? 어떻게 받는지? 언제 어떤 방법으로 진행하며 무엇을 준비해야 하는지? 그 비용은? 마케팅과 협의 요망. 예) MS 로고 인증, Good Software 인증…>

6.14.필드 테스트

<필드 테스트가 필요한지? 계획은? 마케팅과 협의하여 기술>

6.15. 기타 요구사항


## 7.기능 요구사항

<Function Hierarchy 방식으로 구현할 수 있을 정도로만 적는다. 딱히 가이드 라인은 없다. IEEE에도… 2장에서 설명되었던 제품 주요기능을 상세하게 분류하고 설명한다. 각 기능을 구분가능하도록 개별번호를 붙인다. WBS의 각 기능항목은 작업량이 1~2일 정도로 산정가능하도록 세분하여 작성한다.>

7.1.대분류 기능1
7.1.1.…
7.1.1.1…
7.1.1.1.1.…
7.1.1.1.1.1…

## 8.변경관리 프로세스

## 9.최종 승인자
이름, 사인, 날짜

## 10. 참고문헌

## 부록A: 용어
